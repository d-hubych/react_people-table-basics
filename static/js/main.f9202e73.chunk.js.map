{"version":3,"sources":["components/Loader/Loader.tsx","components/PersonLink.tsx","components/PeopleTable.tsx","api.ts","App.tsx","index.tsx"],"names":["Loader","className","PersonItem","person","isSelected","setSelectedSlug","name","sex","born","died","motherName","mother","fatherName","father","slug","parent","parentName","parentLink","to","cn","onClick","PeopleTable","people","useState","selectedSlug","map","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","App","setPeople","isLoader","setIsLoader","errLoad","setErrLoad","isPeoplePage","useMatch","useEffect","result","catch","finally","role","isActive","path","element","replace","length","_","arr","find","mom","dad","createRoot","document","getElementById","render"],"mappings":"0RAEaA,EAAS,kBACpB,qBAAKC,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,qBAFG,ECSTC,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,OACAC,EAEI,EAFJA,WACAC,EACI,EADJA,gBAGEC,EASEH,EATFG,KACAC,EAQEJ,EARFI,IACAC,EAOEL,EAPFK,KACAC,EAMEN,EANFM,KACAC,EAKEP,EALFO,WACAC,EAIER,EAJFQ,OACAC,EAGET,EAHFS,WACAC,EAEEV,EAFFU,OACAC,EACEX,EADFW,KAGIC,EAAS,SACbC,GAEI,IADJC,EACG,uDADyB,KAE5B,QAAQ,GACN,MAAOA,EACL,OACE,cAAC,IAAD,CACEC,GAAE,0BAAcD,QAAd,IAAcA,OAAd,EAAcA,EAAYH,MAC5Bb,UAAWkB,IAAG,CAAE,kBAAuC,OAAV,OAAVF,QAAU,IAAVA,OAAA,EAAAA,EAAYV,OAC/Ca,QAAS,kBAAMf,EAAgB,GAAD,cAAIY,QAAJ,IAAIA,OAAJ,EAAIA,EAAYH,MAArC,EAHX,gBAKGG,QALH,IAKGA,OALH,EAKGA,EAAYX,OAGnB,MAAOU,EACL,OACEA,EAEJ,QACE,MAAO,IAEZ,EAED,OACE,qBACE,UAAQ,SACRf,UAAWkB,IAAG,CAAE,yBAA0Bf,IAF5C,UAIE,6BACE,cAAC,IAAD,CACEc,GAAE,mBAAcJ,GAChBb,UAAWkB,IAAG,CAAE,kBAA2B,MAARZ,IACnCa,QAAS,kBAAMf,EAAgBS,EAAtB,EAHX,SAKGR,MAIL,6BAAKC,IACL,6BAAKC,IACL,6BAAKC,IACL,6BACGM,EAAOL,EAAYC,KAEtB,6BACGI,EAAOH,EAAYC,OAI3B,ECtEYQ,EAAyB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACvC,EAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBnB,EAArB,KAEA,OACE,wBACE,UAAQ,cACRJ,UAAU,uDAFZ,UAIE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAIJ,gCACGqB,EAAOG,KAAI,SAAAtB,GAAM,OAChB,cAAC,EAAD,CAEEA,OAAQA,EACRC,WAAYoB,IAAiBrB,EAAOW,KACpCT,gBAAiBA,GAHZF,EAAOW,KAFE,QAWzB,EC9BM,SAASY,IAEd,OANYC,EAMA,IALL,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAxB,KAMvBI,MAAK,kBAAMC,MATA,oEASN,IACLD,MAAK,SAAAE,GAAQ,OAAIA,EAASC,MAAb,IARlB,IAAcP,CASb,C,UCCYQ,EAAU,WACrB,MAA4BZ,mBAAmB,IAA/C,mBAAOD,EAAP,KAAec,EAAf,KACA,EAAgCb,oBAAS,GAAzC,mBAAOc,EAAP,KAAiBC,EAAjB,KACA,EAA8Bf,oBAAS,GAAvC,mBAAOgB,EAAP,KAAgBC,EAAhB,KACMC,EAAeC,YAAS,WAE9BC,qBAAU,WACJF,IACFH,GAAY,GACZZ,IACGK,MAAK,SAAAa,GAAM,OAAIR,EAAUQ,EAAd,IACXC,OAAM,kBAAML,GAAW,EAAjB,IACNM,SAAQ,kBAAMR,GAAY,EAAlB,IAEd,GAAE,CAACG,IAYJ,OACE,sBAAK,UAAQ,MAAb,UACE,qBACE,UAAQ,MACRxC,UAAU,iCACV8C,KAAK,aACL,aAAW,kBAJb,SAME,qBAAK9C,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEA,UAAW,gBAAG+C,EAAH,EAAGA,SAAH,OAAkB7B,IAC3B,cACA,CAAE,8BAA+B6B,GAFxB,EAIX9B,GAAG,IALL,kBAUA,cAAC,IAAD,CACEjB,UAAW,gBAAG+C,EAAH,EAAGA,SAAH,OAAkB7B,IAC3B,cACA,CAAE,8BAA+B6B,GAFxB,EAIX9B,GAAG,UALL,2BAaN,sBAAMjB,UAAU,UAAhB,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEgD,KAAK,IACLC,QACE,oBAAIjD,UAAU,QAAd,yBAIJ,cAAC,IAAD,CACEgD,KAAK,QACLC,QAAS,cAAC,IAAD,CAAUhC,GAAG,IAAIiC,SAAO,MAGnC,cAAC,IAAD,CACEF,KAAK,IACLC,QACE,oBAAIjD,UAAU,QAAd,8BAIJ,cAAC,IAAD,CACEgD,KAAK,UACLC,QAEI,qCACE,oBAAIjD,UAAU,QAAd,yBAEA,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,sBAAf,UACGoC,GAAY,cAAC,EAAD,IAEZE,GACC,mBACE,UAAQ,qBACRtC,UAAU,kBAFZ,mCAQAoC,IAAaE,IAAYjB,EAAO8B,QAChC,mBAAG,UAAQ,kBAAX,+CAKDX,KAAkBnB,EAAO8B,QACxB,cAAC,EAAD,CAAa9B,OA3F5BA,EAAOG,KAAI,SAACtB,EAAQkD,EAAGC,GAC5B,OAAO,2BACFnD,GADL,IAEEQ,OAAQ2C,EAAIC,MAAK,SAAAC,GAAG,OAAIA,EAAIlD,OAASH,EAAOO,UAAxB,IACpBG,OAAQyC,EAAIC,MAAK,SAAAE,GAAG,OAAIA,EAAInD,OAASH,EAAOS,UAAxB,KAEvB,yBAkGJ,EChID8C,qBAAWC,SAASC,eAAe,SAChCC,OACC,cAAC,IAAD,UACE,cAAC,EAAD,M","file":"static/js/main.f9202e73.chunk.js","sourcesContent":["import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { FC, Dispatch, SetStateAction } from 'react';\nimport cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person,\n  isSelected: boolean,\n  setSelectedSlug: Dispatch<SetStateAction<string>>,\n};\n\nexport const PersonItem: FC<Props> = ({\n  person,\n  isSelected,\n  setSelectedSlug,\n}) => {\n  const {\n    name,\n    sex,\n    born,\n    died,\n    motherName,\n    mother,\n    fatherName,\n    father,\n    slug,\n  } = person;\n\n  const parent = (\n    parentName: string | null,\n    parentLink: Person | null = null,\n  ) => {\n    switch (true) {\n      case !!parentLink:\n        return (\n          <Link\n            to={`#/people/${parentLink?.slug}`}\n            className={cn({ 'has-text-danger': parentLink?.sex === 'f' })}\n            onClick={() => setSelectedSlug(`${parentLink?.slug}`)}\n          >\n            {parentLink?.name}\n          </Link>\n        );\n      case !!parentName:\n        return (\n          parentName\n        );\n      default:\n        return '-';\n    }\n  };\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={cn({ 'has-background-warning': isSelected })}\n    >\n      <td>\n        <Link\n          to={`#/people/${slug}`}\n          className={cn({ 'has-text-danger': sex === 'f' })}\n          onClick={() => setSelectedSlug(slug)}\n        >\n          {name}\n        </Link>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {parent(motherName, mother)}\n      </td>\n      <td>\n        {parent(fatherName, father)}\n      </td>\n    </tr>\n  );\n};\n","import { FC, useState } from 'react';\nimport { Person } from '../types';\nimport { PersonItem } from './PersonLink';\n\ntype Props = {\n  people: Person[],\n};\n\nexport const PeopleTable: FC<Props> = ({ people }) => {\n  const [selectedSlug, setSelectedSlug] = useState('');\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonItem\n            key={person.slug}\n            person={person}\n            isSelected={selectedSlug === person.slug}\n            setSelectedSlug={setSelectedSlug}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { FC, useEffect, useState } from 'react';\nimport {\n  NavLink,\n  Navigate,\n  Route,\n  Routes,\n  useMatch,\n} from 'react-router-dom';\nimport cn from 'classnames';\nimport { Loader } from './components/Loader';\nimport { PeopleTable } from './components/PeopleTable';\nimport { Person } from './types/Person';\nimport { getPeople } from './api';\nimport './App.scss';\n\nexport const App: FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoader, setIsLoader] = useState(false);\n  const [errLoad, setErrLoad] = useState(false);\n  const isPeoplePage = useMatch('/people');\n\n  useEffect(() => {\n    if (isPeoplePage) {\n      setIsLoader(true);\n      getPeople()\n        .then(result => setPeople(result))\n        .catch(() => setErrLoad(true))\n        .finally(() => setIsLoader(false));\n    }\n  }, [isPeoplePage]);\n\n  const preparedPeople = () => {\n    return people.map((person, _, arr) => {\n      return {\n        ...person,\n        mother: arr.find(mom => mom.name === person.motherName),\n        father: arr.find(dad => dad.name === person.fatherName),\n      };\n    });\n  };\n\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              className={({ isActive }) => cn(\n                'navbar-item',\n                { 'has-background-grey-lighter': isActive },\n              )}\n              to=\"/\"\n            >\n              Home\n            </NavLink>\n\n            <NavLink\n              className={({ isActive }) => cn(\n                'navbar-item',\n                { 'has-background-grey-lighter': isActive },\n              )}\n              to=\"/people\"\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route\n              path=\"/\"\n              element={\n                <h1 className=\"title\">Home Page</h1>\n              }\n            />\n\n            <Route\n              path=\"/home\"\n              element={<Navigate to=\"/\" replace />}\n            />\n\n            <Route\n              path=\"*\"\n              element={\n                <h1 className=\"title\">Page not found</h1>\n              }\n            />\n\n            <Route\n              path=\"/people\"\n              element={\n                (\n                  <>\n                    <h1 className=\"title\">People Page</h1>\n\n                    <div className=\"block\">\n                      <div className=\"box table-container\">\n                        {isLoader && <Loader />}\n\n                        {errLoad && (\n                          <p\n                            data-cy=\"peopleLoadingError\"\n                            className=\"has-text-danger\"\n                          >\n                            Something went wrong\n                          </p>\n                        )}\n\n                        {!isLoader && !errLoad && !people.length && (\n                          <p data-cy=\"noPeopleMessage\">\n                            There are no people on the server\n                          </p>\n                        )}\n\n                        {isPeoplePage && !!people.length && (\n                          <PeopleTable people={preparedPeople()} />\n                        )}\n                      </div>\n                    </div>\n                  </>\n                )\n              }\n            />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}